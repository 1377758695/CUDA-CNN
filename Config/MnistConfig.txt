#Comment#

IS_GRADIENT_CHECKING = false;   #is true when debug#
BATCH_SIZE = 200;               #test image size should be divided with no remainder#
NON_LINEARITY = NL_RELU;        #NON_LINEARITY CAN = NL_SIGMOID , NL_TANH , NL_RELU#
CHANNELS = 1;                   #1, 3, 4#
CROP = 0;                       #0<= crop <=imgSize#
SCALE = 12.0;                   #13% of ImgSize#
ROTATION = 12.0;                #angle#
DISTORTION = 3.4;               #just for mnist#
SHOWIMAGE = false;              #show the images after transformation#
HORIZONTAL = false;             #horizontal reflection#
COMBINE_FEATRUE_MAPS = 1;		#According to paper "notes on Convolutional Neural NetWorks"#

[
LAYER = CONV;
KERNEL_SIZE = 5;
PADDING = 0;
KERNEL_AMOUNT = 10;
WEIGHT_DECAY = 1e-4;
]

[
LAYER = POOLING;
SIZE = 2;
SKIP = 2;
]

[  
LAYER = CONV;
KERNEL_SIZE = 5;
PADDING = 0;
KERNEL_AMOUNT = 20;
WEIGHT_DECAY = 1e-4;
]

[
LAYER = POOLING;
SIZE = 2;
SKIP = 2;
]

[
LAYER = FC;
NUM_FULLCONNECT_NEURONS = 256;
WEIGHT_DECAY = 0.0;
DROPCONNECT_RATE = 0.0;
]

[
LAYER = FC;
NUM_FULLCONNECT_NEURONS = 256;
WEIGHT_DECAY = 0.0;
DROPCONNECT_RATE = 0.0;
]


[
LAYER = SOFTMAX;
NUM_CLASSES = 10;
WEIGHT_DECAY = 1e-4;
]
