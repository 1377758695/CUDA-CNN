#Comment#

#NON_LINEARITY = NL_SIGMOID , NL_TANH , NL_RELU#

IS_GRADIENT_CHECKING = false;   #is true when debug#
BATCH_SIZE = 125;               #test image size should be divided with no remainder#

CHANNELS = 3;                   #1, 3, 4#
CROP = 4;                       #0<= crop <=imgSize#
SCALE = 0.0;                   #13% of ImgSize#
ROTATION = 0.0;                #angle#
DISTORTION = 0.0;               #just for mnist#
SHOWIMAGE = false;              #show the images after transformation#
HORIZONTAL = true;             #horizontal reflection#
TEST_EPOCH = 10;               #the period to get the test dataset's error rate#

[
LAYER = CONV;
NAME  = conv1;
INPUT = data;
KERNEL_SIZE = 5;
PADDING = 2;
KERNEL_AMOUNT = 16;
COMBINE_FEATRUE_MAPS = 1;       #According to paper "notes on Convolutional Neural NetWorks#
WEIGHT_DECAY = 1e-6;
initW = 1;
]

[
LAYER = POOLING;
NAME  = pooling1;
INPUT = conv1;
SIZE = 3;
SKIP = 2;
NON_LINEARITY = NL_RELU;
]

[  
LAYER = CONV;
NAME  = conv2;
INPUT = pooling1;
KERNEL_SIZE = 5;
PADDING = 2;
KERNEL_AMOUNT = 32;
COMBINE_FEATRUE_MAPS = 1;       #According to paper "notes on Convolutional Neural NetWorks#
WEIGHT_DECAY = 1e-6;
initW = 1;
]

[
LAYER = POOLING;
NAME  = pooling2;
INPUT = conv2;
SIZE = 3;
SKIP = 2;
NON_LINEARITY = NL_RELU;
]

[  
LAYER = CONV;
NAME  = conv3;
INPUT = pooling2;
KERNEL_SIZE = 3;
PADDING = 1;
KERNEL_AMOUNT = 64;
COMBINE_FEATRUE_MAPS = 1;       #According to paper "notes on Convolutional Neural NetWorks#
WEIGHT_DECAY = 1e-6;
initW = 1;
]

[
LAYER = POOLING;
NAME  = pooling3;
INPUT = conv3;
SIZE = 3;
SKIP = 2;
NON_LINEARITY = NL_RELU;
]

[
LAYER = FC;
NAME  = fc1;
INPUT = pooling3;
NUM_FULLCONNECT_NEURONS = 1024;
WEIGHT_DECAY = 1e-6;
DROPCONNECT_RATE = 0.0;
initW = 0.01;
NON_LINEARITY = NL_RELU;
]

[
LAYER = SOFTMAX;
NAME = softmax1;
INPUT = fc1;
NUM_CLASSES = 10;
WEIGHT_DECAY = 1e-6;
initW = 0.001;
]
